<?php
namespace Aws\DatabaseMigrationService;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS Database Migration Service** service.
 * @method Result addTagsToResource(array $args = [])
 * @method Promise addTagsToResourceAsync(array $args = [])
 * @method Result createEndpoint(array $args = [])
 * @method Promise createEndpointAsync(array $args = [])
 * @method Result createEventSubscription(array $args = [])
 * @method Promise createEventSubscriptionAsync(array $args = [])
 * @method Result createReplicationInstance(array $args = [])
 * @method Promise createReplicationInstanceAsync(array $args = [])
 * @method Result createReplicationSubnetGroup(array $args = [])
 * @method Promise createReplicationSubnetGroupAsync(array $args = [])
 * @method Result createReplicationTask(array $args = [])
 * @method Promise createReplicationTaskAsync(array $args = [])
 * @method Result deleteCertificate(array $args = [])
 * @method Promise deleteCertificateAsync(array $args = [])
 * @method Result deleteEndpoint(array $args = [])
 * @method Promise deleteEndpointAsync(array $args = [])
 * @method Result deleteEventSubscription(array $args = [])
 * @method Promise deleteEventSubscriptionAsync(array $args = [])
 * @method Result deleteReplicationInstance(array $args = [])
 * @method Promise deleteReplicationInstanceAsync(array $args = [])
 * @method Result deleteReplicationSubnetGroup(array $args = [])
 * @method Promise deleteReplicationSubnetGroupAsync(array $args = [])
 * @method Result deleteReplicationTask(array $args = [])
 * @method Promise deleteReplicationTaskAsync(array $args = [])
 * @method Result describeAccountAttributes(array $args = [])
 * @method Promise describeAccountAttributesAsync(array $args = [])
 * @method Result describeCertificates(array $args = [])
 * @method Promise describeCertificatesAsync(array $args = [])
 * @method Result describeConnections(array $args = [])
 * @method Promise describeConnectionsAsync(array $args = [])
 * @method Result describeEndpointTypes(array $args = [])
 * @method Promise describeEndpointTypesAsync(array $args = [])
 * @method Result describeEndpoints(array $args = [])
 * @method Promise describeEndpointsAsync(array $args = [])
 * @method Result describeEventCategories(array $args = [])
 * @method Promise describeEventCategoriesAsync(array $args = [])
 * @method Result describeEventSubscriptions(array $args = [])
 * @method Promise describeEventSubscriptionsAsync(array $args = [])
 * @method Result describeEvents(array $args = [])
 * @method Promise describeEventsAsync(array $args = [])
 * @method Result describeOrderableReplicationInstances(array $args = [])
 * @method Promise describeOrderableReplicationInstancesAsync(array $args = [])
 * @method Result describeRefreshSchemasStatus(array $args = [])
 * @method Promise describeRefreshSchemasStatusAsync(array $args = [])
 * @method Result describeReplicationInstanceTaskLogs(array $args = [])
 * @method Promise describeReplicationInstanceTaskLogsAsync(array $args = [])
 * @method Result describeReplicationInstances(array $args = [])
 * @method Promise describeReplicationInstancesAsync(array $args = [])
 * @method Result describeReplicationSubnetGroups(array $args = [])
 * @method Promise describeReplicationSubnetGroupsAsync(array $args = [])
 * @method Result describeReplicationTaskAssessmentResults(array $args = [])
 * @method Promise describeReplicationTaskAssessmentResultsAsync(array $args = [])
 * @method Result describeReplicationTasks(array $args = [])
 * @method Promise describeReplicationTasksAsync(array $args = [])
 * @method Result describeSchemas(array $args = [])
 * @method Promise describeSchemasAsync(array $args = [])
 * @method Result describeTableStatistics(array $args = [])
 * @method Promise describeTableStatisticsAsync(array $args = [])
 * @method Result importCertificate(array $args = [])
 * @method Promise importCertificateAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result modifyEndpoint(array $args = [])
 * @method Promise modifyEndpointAsync(array $args = [])
 * @method Result modifyEventSubscription(array $args = [])
 * @method Promise modifyEventSubscriptionAsync(array $args = [])
 * @method Result modifyReplicationInstance(array $args = [])
 * @method Promise modifyReplicationInstanceAsync(array $args = [])
 * @method Result modifyReplicationSubnetGroup(array $args = [])
 * @method Promise modifyReplicationSubnetGroupAsync(array $args = [])
 * @method Result modifyReplicationTask(array $args = [])
 * @method Promise modifyReplicationTaskAsync(array $args = [])
 * @method Result rebootReplicationInstance(array $args = [])
 * @method Promise rebootReplicationInstanceAsync(array $args = [])
 * @method Result refreshSchemas(array $args = [])
 * @method Promise refreshSchemasAsync(array $args = [])
 * @method Result reloadTables(array $args = [])
 * @method Promise reloadTablesAsync(array $args = [])
 * @method Result removeTagsFromResource(array $args = [])
 * @method Promise removeTagsFromResourceAsync(array $args = [])
 * @method Result startReplicationTask(array $args = [])
 * @method Promise startReplicationTaskAsync(array $args = [])
 * @method Result startReplicationTaskAssessment(array $args = [])
 * @method Promise startReplicationTaskAssessmentAsync(array $args = [])
 * @method Result stopReplicationTask(array $args = [])
 * @method Promise stopReplicationTaskAsync(array $args = [])
 * @method Result testConnection(array $args = [])
 * @method Promise testConnectionAsync(array $args = [])
 */
class DatabaseMigrationServiceClient extends AwsClient {}

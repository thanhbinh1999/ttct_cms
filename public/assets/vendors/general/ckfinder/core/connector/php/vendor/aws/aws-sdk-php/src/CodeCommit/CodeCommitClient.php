<?php
namespace Aws\CodeCommit;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS CodeCommit** service.
 *
 * @method Result batchGetRepositories(array $args = [])
 * @method Promise batchGetRepositoriesAsync(array $args = [])
 * @method Result createBranch(array $args = [])
 * @method Promise createBranchAsync(array $args = [])
 * @method Result createPullRequest(array $args = [])
 * @method Promise createPullRequestAsync(array $args = [])
 * @method Result createRepository(array $args = [])
 * @method Promise createRepositoryAsync(array $args = [])
 * @method Result deleteBranch(array $args = [])
 * @method Promise deleteBranchAsync(array $args = [])
 * @method Result deleteCommentContent(array $args = [])
 * @method Promise deleteCommentContentAsync(array $args = [])
 * @method Result deleteFile(array $args = [])
 * @method Promise deleteFileAsync(array $args = [])
 * @method Result deleteRepository(array $args = [])
 * @method Promise deleteRepositoryAsync(array $args = [])
 * @method Result describePullRequestEvents(array $args = [])
 * @method Promise describePullRequestEventsAsync(array $args = [])
 * @method Result getBlob(array $args = [])
 * @method Promise getBlobAsync(array $args = [])
 * @method Result getBranch(array $args = [])
 * @method Promise getBranchAsync(array $args = [])
 * @method Result getComment(array $args = [])
 * @method Promise getCommentAsync(array $args = [])
 * @method Result getCommentsForComparedCommit(array $args = [])
 * @method Promise getCommentsForComparedCommitAsync(array $args = [])
 * @method Result getCommentsForPullRequest(array $args = [])
 * @method Promise getCommentsForPullRequestAsync(array $args = [])
 * @method Result getCommit(array $args = [])
 * @method Promise getCommitAsync(array $args = [])
 * @method Result getDifferences(array $args = [])
 * @method Promise getDifferencesAsync(array $args = [])
 * @method Result getFile(array $args = [])
 * @method Promise getFileAsync(array $args = [])
 * @method Result getFolder(array $args = [])
 * @method Promise getFolderAsync(array $args = [])
 * @method Result getMergeConflicts(array $args = [])
 * @method Promise getMergeConflictsAsync(array $args = [])
 * @method Result getPullRequest(array $args = [])
 * @method Promise getPullRequestAsync(array $args = [])
 * @method Result getRepository(array $args = [])
 * @method Promise getRepositoryAsync(array $args = [])
 * @method Result getRepositoryTriggers(array $args = [])
 * @method Promise getRepositoryTriggersAsync(array $args = [])
 * @method Result listBranches(array $args = [])
 * @method Promise listBranchesAsync(array $args = [])
 * @method Result listPullRequests(array $args = [])
 * @method Promise listPullRequestsAsync(array $args = [])
 * @method Result listRepositories(array $args = [])
 * @method Promise listRepositoriesAsync(array $args = [])
 * @method Result mergePullRequestByFastForward(array $args = [])
 * @method Promise mergePullRequestByFastForwardAsync(array $args = [])
 * @method Result postCommentForComparedCommit(array $args = [])
 * @method Promise postCommentForComparedCommitAsync(array $args = [])
 * @method Result postCommentForPullRequest(array $args = [])
 * @method Promise postCommentForPullRequestAsync(array $args = [])
 * @method Result postCommentReply(array $args = [])
 * @method Promise postCommentReplyAsync(array $args = [])
 * @method Result putFile(array $args = [])
 * @method Promise putFileAsync(array $args = [])
 * @method Result putRepositoryTriggers(array $args = [])
 * @method Promise putRepositoryTriggersAsync(array $args = [])
 * @method Result testRepositoryTriggers(array $args = [])
 * @method Promise testRepositoryTriggersAsync(array $args = [])
 * @method Result updateComment(array $args = [])
 * @method Promise updateCommentAsync(array $args = [])
 * @method Result updateDefaultBranch(array $args = [])
 * @method Promise updateDefaultBranchAsync(array $args = [])
 * @method Result updatePullRequestDescription(array $args = [])
 * @method Promise updatePullRequestDescriptionAsync(array $args = [])
 * @method Result updatePullRequestStatus(array $args = [])
 * @method Promise updatePullRequestStatusAsync(array $args = [])
 * @method Result updatePullRequestTitle(array $args = [])
 * @method Promise updatePullRequestTitleAsync(array $args = [])
 * @method Result updateRepositoryDescription(array $args = [])
 * @method Promise updateRepositoryDescriptionAsync(array $args = [])
 * @method Result updateRepositoryName(array $args = [])
 * @method Promise updateRepositoryNameAsync(array $args = [])
 */
class CodeCommitClient extends AwsClient {}

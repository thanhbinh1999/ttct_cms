<?php
namespace Aws\CloudWatchLogs;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon CloudWatch Logs** service.
 *
 * @method Result associateKmsKey(array $args = [])
 * @method Promise associateKmsKeyAsync(array $args = [])
 * @method Result cancelExportTask(array $args = [])
 * @method Promise cancelExportTaskAsync(array $args = [])
 * @method Result createExportTask(array $args = [])
 * @method Promise createExportTaskAsync(array $args = [])
 * @method Result createLogGroup(array $args = [])
 * @method Promise createLogGroupAsync(array $args = [])
 * @method Result createLogStream(array $args = [])
 * @method Promise createLogStreamAsync(array $args = [])
 * @method Result deleteDestination(array $args = [])
 * @method Promise deleteDestinationAsync(array $args = [])
 * @method Result deleteLogGroup(array $args = [])
 * @method Promise deleteLogGroupAsync(array $args = [])
 * @method Result deleteLogStream(array $args = [])
 * @method Promise deleteLogStreamAsync(array $args = [])
 * @method Result deleteMetricFilter(array $args = [])
 * @method Promise deleteMetricFilterAsync(array $args = [])
 * @method Result deleteResourcePolicy(array $args = [])
 * @method Promise deleteResourcePolicyAsync(array $args = [])
 * @method Result deleteRetentionPolicy(array $args = [])
 * @method Promise deleteRetentionPolicyAsync(array $args = [])
 * @method Result deleteSubscriptionFilter(array $args = [])
 * @method Promise deleteSubscriptionFilterAsync(array $args = [])
 * @method Result describeDestinations(array $args = [])
 * @method Promise describeDestinationsAsync(array $args = [])
 * @method Result describeExportTasks(array $args = [])
 * @method Promise describeExportTasksAsync(array $args = [])
 * @method Result describeLogGroups(array $args = [])
 * @method Promise describeLogGroupsAsync(array $args = [])
 * @method Result describeLogStreams(array $args = [])
 * @method Promise describeLogStreamsAsync(array $args = [])
 * @method Result describeMetricFilters(array $args = [])
 * @method Promise describeMetricFiltersAsync(array $args = [])
 * @method Result describeResourcePolicies(array $args = [])
 * @method Promise describeResourcePoliciesAsync(array $args = [])
 * @method Result describeSubscriptionFilters(array $args = [])
 * @method Promise describeSubscriptionFiltersAsync(array $args = [])
 * @method Result disassociateKmsKey(array $args = [])
 * @method Promise disassociateKmsKeyAsync(array $args = [])
 * @method Result filterLogEvents(array $args = [])
 * @method Promise filterLogEventsAsync(array $args = [])
 * @method Result getLogEvents(array $args = [])
 * @method Promise getLogEventsAsync(array $args = [])
 * @method Result listTagsLogGroup(array $args = [])
 * @method Promise listTagsLogGroupAsync(array $args = [])
 * @method Result putDestination(array $args = [])
 * @method Promise putDestinationAsync(array $args = [])
 * @method Result putDestinationPolicy(array $args = [])
 * @method Promise putDestinationPolicyAsync(array $args = [])
 * @method Result putLogEvents(array $args = [])
 * @method Promise putLogEventsAsync(array $args = [])
 * @method Result putMetricFilter(array $args = [])
 * @method Promise putMetricFilterAsync(array $args = [])
 * @method Result putResourcePolicy(array $args = [])
 * @method Promise putResourcePolicyAsync(array $args = [])
 * @method Result putRetentionPolicy(array $args = [])
 * @method Promise putRetentionPolicyAsync(array $args = [])
 * @method Result putSubscriptionFilter(array $args = [])
 * @method Promise putSubscriptionFilterAsync(array $args = [])
 * @method Result tagLogGroup(array $args = [])
 * @method Promise tagLogGroupAsync(array $args = [])
 * @method Result testMetricFilter(array $args = [])
 * @method Promise testMetricFilterAsync(array $args = [])
 * @method Result untagLogGroup(array $args = [])
 * @method Promise untagLogGroupAsync(array $args = [])
 */
class CloudWatchLogsClient extends AwsClient {}

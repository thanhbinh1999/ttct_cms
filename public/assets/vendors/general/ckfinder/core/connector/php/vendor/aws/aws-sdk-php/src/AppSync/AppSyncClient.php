<?php
namespace Aws\AppSync;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS AppSync** service.
 * @method Result createApiKey(array $args = [])
 * @method Promise createApiKeyAsync(array $args = [])
 * @method Result createDataSource(array $args = [])
 * @method Promise createDataSourceAsync(array $args = [])
 * @method Result createFunction(array $args = [])
 * @method Promise createFunctionAsync(array $args = [])
 * @method Result createGraphqlApi(array $args = [])
 * @method Promise createGraphqlApiAsync(array $args = [])
 * @method Result createResolver(array $args = [])
 * @method Promise createResolverAsync(array $args = [])
 * @method Result createType(array $args = [])
 * @method Promise createTypeAsync(array $args = [])
 * @method Result deleteApiKey(array $args = [])
 * @method Promise deleteApiKeyAsync(array $args = [])
 * @method Result deleteDataSource(array $args = [])
 * @method Promise deleteDataSourceAsync(array $args = [])
 * @method Result deleteFunction(array $args = [])
 * @method Promise deleteFunctionAsync(array $args = [])
 * @method Result deleteGraphqlApi(array $args = [])
 * @method Promise deleteGraphqlApiAsync(array $args = [])
 * @method Result deleteResolver(array $args = [])
 * @method Promise deleteResolverAsync(array $args = [])
 * @method Result deleteType(array $args = [])
 * @method Promise deleteTypeAsync(array $args = [])
 * @method Result getDataSource(array $args = [])
 * @method Promise getDataSourceAsync(array $args = [])
 * @method Result getFunction(array $args = [])
 * @method Promise getFunctionAsync(array $args = [])
 * @method Result getGraphqlApi(array $args = [])
 * @method Promise getGraphqlApiAsync(array $args = [])
 * @method Result getIntrospectionSchema(array $args = [])
 * @method Promise getIntrospectionSchemaAsync(array $args = [])
 * @method Result getResolver(array $args = [])
 * @method Promise getResolverAsync(array $args = [])
 * @method Result getSchemaCreationStatus(array $args = [])
 * @method Promise getSchemaCreationStatusAsync(array $args = [])
 * @method Result getType(array $args = [])
 * @method Promise getTypeAsync(array $args = [])
 * @method Result listApiKeys(array $args = [])
 * @method Promise listApiKeysAsync(array $args = [])
 * @method Result listDataSources(array $args = [])
 * @method Promise listDataSourcesAsync(array $args = [])
 * @method Result listFunctions(array $args = [])
 * @method Promise listFunctionsAsync(array $args = [])
 * @method Result listGraphqlApis(array $args = [])
 * @method Promise listGraphqlApisAsync(array $args = [])
 * @method Result listResolvers(array $args = [])
 * @method Promise listResolversAsync(array $args = [])
 * @method Result listResolversByFunction(array $args = [])
 * @method Promise listResolversByFunctionAsync(array $args = [])
 * @method Result listTypes(array $args = [])
 * @method Promise listTypesAsync(array $args = [])
 * @method Result startSchemaCreation(array $args = [])
 * @method Promise startSchemaCreationAsync(array $args = [])
 * @method Result updateApiKey(array $args = [])
 * @method Promise updateApiKeyAsync(array $args = [])
 * @method Result updateDataSource(array $args = [])
 * @method Promise updateDataSourceAsync(array $args = [])
 * @method Result updateFunction(array $args = [])
 * @method Promise updateFunctionAsync(array $args = [])
 * @method Result updateGraphqlApi(array $args = [])
 * @method Promise updateGraphqlApiAsync(array $args = [])
 * @method Result updateResolver(array $args = [])
 * @method Promise updateResolverAsync(array $args = [])
 * @method Result updateType(array $args = [])
 * @method Promise updateTypeAsync(array $args = [])
 */
class AppSyncClient extends AwsClient {}
